"use client";
// import type { Metadata } from 'next'

// export const metadata: Metadata = {
//   title: 'E-Commerce',
//   description: 'Generated by create next app',
// }
import StyledComponentsRegistry from "./lib/registry";
import { ThemeProvider } from "styled-components";
import { ChildContainer, GlobalStyle } from "./assets/style";
import { light } from "./assets/style/themeColor";
import HeaderComponent from "./components/parts/headerComponent";
import GlobalContext, { globalContext } from "./utils/states";
import FooterComponent from "./components/parts/FooterComponent";
import { usePathname } from "next/navigation";
import { ApolloWrapper } from "./apolloWrapper/wraper";
import { ChildrenProps } from "./assets/style/interface";
import { MyContextProvider } from "../app/myContext";
import { ToastContainer } from "react-toastify";
import { Backdrop } from "@mui/material";
import { useState } from "react";
import { Elements } from "@stripe/react-stripe-js";
import { loadStripe } from "@stripe/stripe-js";
import { gql, useQuery } from "@apollo/client";
import { USER_ID } from "./utils/variables";
const stripePromise = loadStripe(
  "pk_test_51BTUDGJAJfZb9HEBwDg86TN1KNprHjkfipXmEDMb0gSCassK5T3ZfxsAbcgKVmAIXF7oZ6ItlZZbXO6idTHE67IM007EwQ4uN3"
);
export default function RootLayout({ children }: ChildrenProps) {
  const [accountAnchor, setAccountAnchor] = useState(null);
  const openAccountAnchor = (e) => {
    setAccountAnchor(e.currentTarget);
  };
  const closeAccountAnchor = () => {
    setAccountAnchor(null);
  };

  const path = usePathname();
  const pathhArr = path.split("/");


  return (
    <html>
      <head>
        <title>E-commerce</title>
        <meta
          name="description"
          content="Shop online for groceries and get your order delivered at your doorstep in minutes. Enjoy instant delivery with"
        />
        <link
          href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;600;700;800&display=swap"
          rel="stylesheet"
        />
      </head>
      <body cz-shortcut-listen="true">
        <MyContextProvider>
          <StyledComponentsRegistry>
            <ThemeProvider theme={light}>
              <GlobalStyle />
              <GlobalContext>
                <ApolloWrapper>
                  <HeaderComponent
                    accountAnchor={accountAnchor}
                    openfunc={openAccountAnchor}
                    closeFunc={closeAccountAnchor}
                  />
                  <ChildContainer>
                    <Backdrop
                      sx={{
                        color: "#fff",
                        zIndex: 1,
                      }}
                      open={accountAnchor}
                    ></Backdrop>
                    {children}
                  </ChildContainer>
                  <ToastContainer />

                  {pathhArr[pathhArr.length - 1] !== "category" &&
                    !pathhArr.includes("search") && <FooterComponent />}
                </ApolloWrapper>
              </GlobalContext>
            </ThemeProvider>
          </StyledComponentsRegistry>
        </MyContextProvider>
      </body>
    </html>
  );
}
